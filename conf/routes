# Routes
# This file defines all routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           					@controllers.App.index()
# Post
GET     /posts                      					@controllers.App.postList(p:Int ?= 0, category:String=null)
GET     /posts/category/:category                       @controllers.App.postList(p:Int ?= 0, category:String)
GET     /posts/following                      			@controllers.App.postListFollowing(p:Int ?= 0)
POST    /posts                      					@controllers.App.postCreate()
GET     /posts/new                  					@controllers.App.postNewForm()
GET     /posts/:key/rateUp          					@controllers.App.rateUp(key: Long)
GET     /posts/:key/rateDown        					@controllers.App.rateDown(key: Long)
GET     /posts/:key/rate            					@controllers.App.rateShow(key: Long)
GET     /posts/:key/edit            					@controllers.App.postEditForm(key: Long)
POST    /posts/:key/update          					@controllers.App.postUpdate(key: Long)
GET     /posts/:key/delete          					@controllers.App.postDelete(key: Long)
GET     /posts/:key/:title          					@controllers.App.postShow(key: Long, title: String, p:Int ?= 0)
# Comment
POST    /posts/:postKey/:title                    		@controllers.App.commentCreate(postKey: Long, title: String)
GET     /posts/:postKey/comments/:commentKey/edit/  	@controllers.App.commentEditForm(postKey: Long, commentKey: Long)
POST    /posts/:postKey/comments/:commentKey        	@controllers.App.commentUpdate(postKey: Long, commentKey: Long)
GET     /posts/:postKey/comments/:commentKey/delete 	@controllers.App.commentDelete(postKey: Long, commentKey: Long)
#Users
GET     /users/self                 					@controllers.App.userShowSelf()
GET     /users/:key                 					@controllers.App.userShow(key: String,tab:String?=null,page:Int ?= 0)
GET     /users/:key/follow             					@controllers.Api.userFollow(key: String)
GET     /users/:key/unfollow          					@controllers.Api.userUnfollow(key: String)
GET		/users/:key/followers							@controllers.App.userFollowers(key: String, p:Int ?= 0)
GET		/users/:key/followings							@controllers.App.userFollowings(key: String, p:Int ?= 0)

# socialauth integration
GET     /user/login                     				@controllers.App.login
GET     /user/logout                    				@controllers.App.logout
GET     /authenticate/:provider         				@controllers.App.authenticate(provider)
POST    /authenticate/:provider         				@controllers.App.authenticate(provider)
GET     /authenticate/:provider/done    				@controllers.App.authenticateDone(provider)

# crud integration
# ~~~~
GET     /admin/                         				@controllers.Admin.index()
GET     /admin/category/list            				@controllers.Admin.categoryList(p:Int ?= 0)
POST    /admin/category                 				@controllers.Admin.categoryCreate()
GET     /admin/category/new             				@controllers.Admin.categoryNewForm()
GET     /admin/category/:key/edit       				@controllers.Admin.categoryEditForm(key)
POST    /admin/category/:key/update     				@controllers.Admin.categoryUpdate(key)
GET     /admin/category/:key/delete     				@controllers.Admin.categoryDelete(key)
GET     /admin/category/:key/show       				@controllers.Admin.categoryShow(key)
GET     /admin/comment/list             				@controllers.Admin.commentList(p:Int ?= 0)
POST    /admin/comment                  				@controllers.Admin.commentCreate()
GET     /admin/comment/new              				@controllers.Admin.commentNewForm()
GET     /admin/comment/:key/edit        				@controllers.Admin.commentEditForm(key:Long)
POST    /admin/comment/:key/update      				@controllers.Admin.commentUpdate(key:Long)
GET     /admin/comment/:key/delete      				@controllers.Admin.commentDelete(key:Long)
GET     /admin/comment/:key/show        				@controllers.Admin.commentShow(key:Long)
GET     /admin/post/list              					@controllers.Admin.postList(p:Int ?= 0)
POST    /admin/post                   					@controllers.Admin.postCreate()
GET     /admin/post/new               					@controllers.Admin.postNewForm()
GET     /admin/post/:key/edit         					@controllers.Admin.postEditForm(key:Long)
POST    /admin/post/:key/update       					@controllers.Admin.postUpdate(key:Long)
GET     /admin/post/:key/delete       					@controllers.Admin.postDelete(key:Long)
GET     /admin/post/:key/show         					@controllers.Admin.postShow(key:Long)
GET     /admin/s3File/list              				@controllers.Admin.s3FileList(p:Int ?= 0)
GET     /admin/s3File/:key/delete       				@controllers.Admin.s3FileDelete(key)
GET     /admin/s3File/:key/show         				@controllers.Admin.s3FileShow(key)
GET     /admin/securityRole/							@controllers.Admin.securityRoleList(p:Int ?= 0)
POST    /admin/securityRole             				@controllers.Admin.securityRoleCreate()
GET     /admin/securityRole/new         				@controllers.Admin.securityRoleNewForm()
GET     /admin/securityRole/:key/edit   				@controllers.Admin.securityRoleEditForm(key:Long)
POST    /admin/securityRole/:key/update 				@controllers.Admin.securityRoleUpdate(key:Long)
GET     /admin/securityRole/:key/delete 				@controllers.Admin.securityRoleDelete(key:Long)
GET     /admin/securityRole/:key/show   				@controllers.Admin.securityRoleShow(key:Long)
GET     /admin/user/list              					@controllers.Admin.userList(status:String=null, page:Int ?= 0)
GET     /admin/User/list/Status.:status                 @controllers.Admin.userList(status:String, page:Int ?= 0)
POST    /admin/user                   					@controllers.Admin.userCreate()
GET     /admin/user/new               					@controllers.Admin.userNewForm()
GET     /admin/user/:key/edit         					@controllers.Admin.userEditForm(key)
POST    /admin/user/:key/update       					@controllers.Admin.userUpdate(key)
GET     /admin/user/:key/delete       					@controllers.Admin.userDelete(key)
GET     /admin/user/:key/show         					@controllers.Admin.userShow(key)
GET     /admin/user/bulk                                @controllers.Admin.userBulkList()
POST    /admin/user/bulk                                @controllers.Admin.userCreateBulk()
GET     /admin/user/bulk/new                            @controllers.Admin.userNewBulkForm()
GET     /admin/config                   				@controllers.Admin.sourceConfigurationList(p:Int ?= 0)
POST    /admin/config                   				@controllers.Admin.sourceConfigurationCreate()
GET     /admin/config/new               				@controllers.Admin.sourceConfigurationNewForm()
GET     /admin/config/:key/edit         				@controllers.Admin.sourceConfigurationEditForm(key: Long)
POST    /admin/config/:key/update       				@controllers.Admin.sourceConfigurationUpdate(key: Long)
GET     /admin/config/:key/delete       				@controllers.Admin.sourceConfigurationDelete(key: Long)
GET     /admin/config/:key              				@controllers.Admin.sourceConfigurationShow(key: Long)
POST    /admin/config/bulk              				@controllers.Admin.sourceConfigurationCreateBulk()
GET     /admin/config/bulk/new          				@controllers.Admin.sourceConfigurationNewBulkForm()
GET     /admin/config/bulk/:key/edit    				@controllers.Admin.sourceConfigurationEditBulkForm(key: Long)
POST    /admin/config/bulk/:key/update  				@controllers.Admin.sourceConfigurationUpdateBulk(key: Long)
GET     /admin/User/:key/approve        				@controllers.Admin.userApprove(key, page:Int ?= 0)
GET     /admin/User/:key/suspend        				@controllers.Admin.userSuspend(key, page:Int ?= 0)
GET     /admin/User/:key/recalculateReputation			@controllers.Admin.userRecalculateReputation(key, page:Int ?= 0)
GET     /admin/User/calculateAllReputations				@controllers.Admin.calculateAllReputations()
#GET     /admin/User/Status.:status/list 				@controllers.Admin.userList(status:String, page:Int ?= 0)
GET     /admin/userFollow/list              			@controllers.Admin.userFollowList(p:Int ?= 0)
POST    /admin/userFollow                   			@controllers.Admin.userFollowCreate()
GET     /admin/userFollow/new               			@controllers.Admin.userFollowNewForm()
GET     /admin/userFollow/:key/edit         			@controllers.Admin.userFollowEditForm(key:String)
POST    /admin/userFollow/:key/update       			@controllers.Admin.userFollowUpdate(key:String)
GET     /admin/userFollow/:key/delete       			@controllers.Admin.userFollowDelete(key:String)
GET     /admin/userFollow/:key/show         			@controllers.Admin.userFollowShow(key:String)
GET     /admin/reputationValue/list            			@controllers.Admin.reputationValueList(p:Int ?= 0)
POST    /admin/reputationValue                 			@controllers.Admin.reputationValueCreate()
GET     /admin/reputationValue/new             			@controllers.Admin.reputationValueNewForm()
GET     /admin/reputationValue/:key/edit       			@controllers.Admin.reputationValueEditForm(key)
POST    /admin/reputationValue/:key/update     			@controllers.Admin.reputationValueUpdate(key)
GET     /admin/reputationValue/:key/delete     			@controllers.Admin.reputationValueDelete(key)
GET     /admin/reputationValue/:key/show       			@controllers.Admin.reputationValueShow(key)
GET     /admin/report/list             					@controllers.Admin.contentReportList(status:String=null, p:Int ?= 0)
POST    /admin/report                  					@controllers.Admin.contentReportCreate()
GET     /admin/report/new              					@controllers.Admin.contentReportNewForm()
GET     /admin/report/:key/edit        					@controllers.Admin.contentReportEditForm(key:Long)
POST    /admin/report/:key/update      					@controllers.Admin.contentReportUpdate(key:Long)
GET     /admin/report/:key/delete      					@controllers.Admin.contentReportDelete(key:Long)
GET     /admin/report/:key/content/:contentType/:contentKey/show	@controllers.Admin.contentReportShow(contentType:String, contentKey:Long, key:Long)
GET     /admin/User/status/:status/list                 @controllers.Admin.contentReportList(status:String, page:Int ?= 0)

# JSON API
PUT     /api/category/:key              				@controllers.Api.categoryUpdate(key: String)
PUT     /api/comment/:key               				@controllers.Api.commentUpdate(key: Long)
PUT     /api/postRating/:key            				@controllers.Api.postRatingUpdate(key: String)
PUT     /api/post/:key                  				@controllers.Api.postUpdate(key: Long)
PUT     /api/s3File/:key                				@controllers.Api.s3FileUpdate(key: String)
PUT     /api/securityRole/:key          				@controllers.Api.securityRoleUpdate(key: Long)
GET     /api/securityRole/           				    @controllers.Api.securityRoleList()
PUT     /api/user/:key                  				@controllers.Api.userUpdate(key: String)
PUT     /api/user/:key/roleUpdate               		@controllers.Api.userRoleUpdate(key: String)
PUT     /api/config/:key                				@controllers.Api.sourceConfigurationUpdate(key: Long)
GET     /api/report/:key        						@controllers.Api.contentReportUpdate(key:Long)
POST    /api/report/        							@controllers.Api.contentReportCreate()
GET		/api/report/:key/ignore							@controllers.Api.contentReportIgnore(key:Long)
GET		/api/post/:key/approve							@controllers.Api.postApprove(key:Long)
GET		/api/post/:key/remove							@controllers.Api.postRemove(key:Long)
GET		/api/post/:key/expire							@controllers.Api.postMarkExpired(key:Long)
GET		/api/comment/:key/approve						@controllers.Api.commentApprove(key:Long)
GET		/api/comment/:key/remove						@controllers.Api.commentRemove(key:Long)

# API fallback
GET     /api/*resource                 					@controllers.Api.invalid(resource: String)
POST    /api/*resource                 					@controllers.Api.invalid(resource: String)
PUT     /api/*resource                 					@controllers.Api.invalid(resource: String)
DELETE  /api/*resource                 					@controllers.Api.invalid(resource: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               					controllers.Assets.at(path="/public", file)

